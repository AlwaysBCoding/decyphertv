// Program
var program = {
  mode: "local",
  endpoint: "http://localhost:8545"
}

// External Libraries
var solc = require('solc');
var EthTx = require('ethereumjs-tx');
var EthUtil = require('ethereumjs-util');
var fs = require("fs");
var Web3 = require("web3");
var lodash = require("lodash");
var SolidityFunction = require("web3/lib/web3/function");
var web3 = new Web3(new Web3.providers.HttpProvider(`${program.endpoint}`));

// Constants
const __TESTDIR__ = "/Users/AlwaysBCoding/Desktop/decyphertv/test"
var Decypher = require("../src/shared");
var decypher = new Decypher({
  program: program,
  solc: solc,
  EthTx: EthTx,
  EthUtil: EthUtil,
  fs: fs,
  lodash: lodash,
  web3: web3
});

// Contracts
var HelloWorldContract = fs.readFileSync(__TESTDIR__ + "/contracts/HelloWorld.sol", "utf8")
var CrowdfundContract = fs.readFileSync(__TESTDIR__ + "/contracts/crowdfund.sol", "utf8")
var EscrowContract = fs.readFileSync(__TESTDIR__ + "/contracts/Escrow.sol", "utf8")

// Method Tests
describe("#contractName", () => {

  test('parses TitleCase name', () => {
    expect(decypher.contractName(HelloWorldContract)).toBe("HelloWorld")
  })

  test('parses lowercase name', () => {
    expect(decypher.contractName(CrowdfundContract)).toBe("crowdfund")
  })

  test('parses Simple name', () => {
    expect(decypher.contractName(EscrowContract)).toBe("Escrow")
  })

})

describe("#opcodes", () => {

  test('returns opcodes from the simple HelloWorld contract', () => {
    var opcodes = "PUSH1 0x60 PUSH1 0x40 MSTORE CALLVALUE ISZERO PUSH2 0xC JUMPI INVALID JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x299 CODESIZE SUB DUP1 PUSH2 0x299 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 MSTORE DUP1 DUP1 MLOAD DUP3 ADD SWAP2 SWAP1 POP POP JUMPDEST DUP1 PUSH1 0x0 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x3F SWAP3 SWAP2 SWAP1 PUSH2 0x47 JUMP JUMPDEST POP JUMPDEST POP PUSH2 0xEC JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 SHA3 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH1 0x1F LT PUSH2 0x88 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0xB6 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0xB6 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0xB5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x9A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0xC7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH2 0xE9 SWAP2 SWAP1 JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0xE5 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0xCD JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST SWAP1 JUMP JUMPDEST PUSH2 0x19E DUP1 PUSH2 0xFB PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x60 PUSH1 0x40 MSTORE PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xE21F37CE EQ PUSH2 0x3B JUMPI JUMPDEST INVALID JUMPDEST CALLVALUE ISZERO PUSH2 0x43 JUMPI INVALID JUMPDEST PUSH2 0x4B PUSH2 0xD4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP1 PUSH1 0x20 ADD DUP3 DUP2 SUB DUP3 MSTORE DUP4 DUP2 DUP2 MLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 DUP1 DUP4 DUP4 PUSH1 0x0 DUP4 EQ PUSH2 0x9A JUMPI JUMPDEST DUP1 MLOAD DUP3 MSTORE PUSH1 0x20 DUP4 GT ISZERO PUSH2 0x9A JUMPI PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH1 0x20 DUP4 SUB SWAP3 POP PUSH2 0x76 JUMP JUMPDEST POP POP POP SWAP1 POP SWAP1 DUP2 ADD SWAP1 PUSH1 0x1F AND DUP1 ISZERO PUSH2 0xC6 JUMPI DUP1 DUP3 SUB DUP1 MLOAD PUSH1 0x1 DUP4 PUSH1 0x20 SUB PUSH2 0x100 EXP SUB NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP JUMPDEST POP SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH1 0x1 DUP2 PUSH1 0x1 AND ISZERO PUSH2 0x100 MUL SUB AND PUSH1 0x2 SWAP1 DIV DUP1 ISZERO PUSH2 0x16A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x13F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x16A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 SHA3 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x14D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 JUMP STOP LOG1 PUSH6 0x627A7A723058 SHA3 PUSH8 0x3F73ECFB501FDEFC DUP9 MLOAD 0xe1 GAS 0xaf 0xe DUP1 0xf9 0x2f SHA3 0xd6 SWAP15 JUMP EXTCODECOPY 0x29 0x5e JUMPDEST 0xbd COINBASE 0x27 PUSH7 0x75FD0029000000 "
    expect(decypher.opcodes(HelloWorldContract)).toBe(opcodes)
  })

})

describe("#etherBalance", () => {

  test('returns etherBalance from account', () => {
    expect(decypher.etherBalance(web3.eth.accounts[4])).toBe(100)
  })

})
